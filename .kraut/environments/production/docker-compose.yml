# Production docker-compose
#

# DC version
version: "2"

# DC Service definitions
services:

  ####
  # Source
  #
  source:
    image: "quay.io/wunder/wunder-alpine-base"
    command:
      - /bin/true
    volumes:
      - "/app/web"
      - "/app/vendor"
      - "/app/config"

  ####
  # Assets
  #
  assets:
    image: quay.io/wunder/wunder-alpine-base
    command:
      - /bin/true
    volumes:
      - "/app/web/sites/default/files"
      - "/app/backup"
      - "/app/private"

  ####
  # Servers
  #
  # The following nodes are services that support the application.  Typically
  # the AMP stack is represented, along with any key-value, search and static-caching
  # servers used.
  #
  # It is optimal if the services use generic shared images, that are used across
  # instances, and across applications.  This makes the overally server impact low
  # and means that management tools can focus on the source and asset images
  #

  ####
  # DB node
  #
  db:
    image: quay.io/wunder/wundertools-image-fuzzy-mariadb

  ####
  # MemCacheD
  #
  memcache:
    image: quay.io/wunder/alpine-memcached

  ####
  # FPM node
  #
  fpm:
    image: quay.io/wunder/wundertools-image-fuzzy-php
    volumes_from:
      - source:ro
      - assets
    environment:
      KRAUT_ENV: production
    links:
      - db:db.app
      - memcache:memcached.app

  ####
  # WWW node
  #
  www:
    image: quay.io/wunder/wundertools-image-fuzzy-nginx
    hostname: www.myproject.com
    volumes_from:
      - source:ro
      - assets:ro
    environment:
      KRAUT_ENV: production
    links:
      - fpm:fpm.app

  ####
  # Static cache service
  #
  varnish:
    image: quay.io/wunder/alpine-varnish
    environment:
      VARNISH_BACKEND_HOST: backend.app
    links:
      - www:backend.app
